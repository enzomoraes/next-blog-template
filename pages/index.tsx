import { GetServerSideProps, GetServerSidePropsContext } from 'next';
import Head from 'next/head';
import Router from 'next/router';
import ReactPaginate from 'react-paginate';
import FeaturedPost from '../components/FeaturedPost';
import PageGrid from '../components/PageGrid';
import PostCard from '../components/PostCard';
import PostsGrid from '../components/PostsGrid';
import PostService from '../core/services/PostService';

interface HomeProps {
  posts?: any;
}

export default function Home(props: HomeProps) {
  const { posts } = props;
  return (
    <PageGrid>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {posts?.content && (
        <FeaturedPost postSummary={posts.content[0]}></FeaturedPost>
      )}
      <PostsGrid>
        {posts?.content?.slice(1).map((post: any) => {
          return <PostCard key={post.id} post={post} />;
        })}
      </PostsGrid>

      <ReactPaginate
        containerClassName={'Pagination'}
        pageCount={posts?.totalPages || 0}
        marginPagesDisplayed={0}
        pageRangeDisplayed={3}
        previousLabel={'<'}
        nextLabel={'>'}
        hrefBuilder={page => `/?page=${page}`}
        onPageChange={page => {
          Router.push(`/?page=${page.selected + 1}`);
        }}
      ></ReactPaginate>
    </PageGrid>
  );
}

function sendToHomePage() {
  return {
    redirect: {
      permanent: false,
      destination: '/?page=1',
    },
  };
}

export const getServerSideProps: GetServerSideProps<HomeProps> = async ({
  query,
}: GetServerSidePropsContext) => {
  const { page: _page } = query;
  const page = _page ? Number(_page) : 1;
  if (isNaN(page) || page < 1) {
    return sendToHomePage();
  }

  const posts = await PostService.getAllPosts({ page: page - 1 });

  if (!posts.content?.length) {
    return sendToHomePage();
  }

  return {
    props: { posts },
  };
};
